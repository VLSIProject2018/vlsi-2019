// Library - muddlib11, Cell - flopenr_dp_1x, View - cmos_sch
// LAST TIME SAVED: Feb 16 22:56:16 2012
// NETLIST TIME: Mar 22 01:30:36 2019
`timescale 1ns / 100ps 

module flopenr_dp_1x ( q, d, en, enb, ph1, ph1b, ph2, ph2b, resetb );

output  q;

input  d, en, enb, ph1, ph1b, ph2, ph2b, resetb;
trireg    slaveb;
trireg    masterb;



specify 
    specparam CDS_LIBNAME  = "muddlib11";
    specparam CDS_CELLNAME = "flopenr_dp_1x";
    specparam CDS_VIEWNAME = "cmos_sch";
endspecify

rnmos #(0.1)  M18( net030, masterb, ph2b);
rnmos #(0.1)  M19( net068, slaveb, ph1b);
rpmos #(0.1)  M17( net057, slaveb, ph1);
rpmos #(0.1)  M15( net054, masterb, ph2);
`switch default
nmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M1(
     master, cds_globals.gnd_, masterb);
`switch default
nmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M2(
     masterb, masterinb, ph2);
`switch default
nmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M5(
     masterinb, net016, d);
`switch default
nmos #(0.1)   (* const real width = 5.400, length = 0.600; *) M7(
     net016, net015, en);
`switch default
nmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M10(
     net018, masterinb, slaveb);
`switch default
nmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M11(
     net015, net018, enb);
`switch default
nmos #(0.1)   (* const real width = 7.200, length = 0.600; *) M12(
     net015, cds_globals.gnd_, resetb);
`switch default
nmos #(0.1)   (* const real width = 1.200, length = 0.600; *) M14(
     cds_globals.gnd_, net030, master);
`switch default
nmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M22(
     slave, cds_globals.gnd_, slaveb);
`switch default
nmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M21(
     slaveb, master, ph1);
`switch default
nmos #(0.1)   (* const real width = 1.200, length = 0.600; *) M20(
     cds_globals.gnd_, net068, slave);
`switch default
nmos #(0.1)   (* const real width = 2.100, length = 0.600; *) M26( q,
     cds_globals.gnd_, slave);
`switch default
pmos #(0.1)   (* const real width = 2.700, length = 0.600; *) M0(
     master, cds_globals.vdd_, masterb);
`switch default
pmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M3(
     masterb, masterinb, ph2b);
`switch default
pmos #(0.1)   (* const real width = 3.600, length = 0.600; *) M4(
     masterinb, net048, d);
`switch default
pmos #(0.1)   (* const real width = 3.600, length = 0.600; *) M6(
     net048, cds_globals.vdd_, enb);
`switch default
pmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M8(
     net046, masterinb, slaveb);
`switch default
pmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M9(
     cds_globals.vdd_, net046, en);
`switch default
pmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M13(
     masterinb, cds_globals.vdd_, resetb);
`switch default
pmos #(0.1)   (* const real width = 1.200, length = 0.600; *) M16(
     cds_globals.vdd_, net054, master);
`switch default
pmos #(0.1)   (* const real width = 1.800, length = 0.600; *) M24(
     slaveb, master, ph1b);
`switch default
pmos #(0.1)   (* const real width = 2.700, length = 0.600; *) M25(
     slave, cds_globals.vdd_, slaveb);
`switch default
pmos #(0.1)   (* const real width = 1.200, length = 0.600; *) M23(
     cds_globals.vdd_, net057, slave);
`switch default
pmos #(0.1)   (* const real width = 3.000, length = 0.600; *) M27( q,
     cds_globals.vdd_, slave);

endmodule
